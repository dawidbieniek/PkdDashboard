@page "/pkd"
@using Microsoft.EntityFrameworkCore
@using PkdDashboard.WebApp.Components.Layout

@rendermode InteractiveServer
@attribute [Authorize]

@inject PkdService PkdService

<PageTitle>Lista PKD</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudTable ServerData="ServerReload" Height="75vh" Hover>
        <ColGroup>
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>Sekcja</MudTh>
            <MudTh>Dział</MudTh>
            <MudTh>Grupa</MudTh>
            <MudTh>Klasa</MudTh>
            <MudTh>Symbol</MudTh>
            <MudTh>Opis</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Section">@context.Section</MudTd>
            <MudTd DataLabel="Division">@context.DivisionString</MudTd>
            <MudTd DataLabel="Group">@context.GroupString</MudTd>
            <MudTd DataLabel="Class">@context.ClassString</MudTd>
            <MudTd DataLabel="Symbol">@context.PkdString</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager HideRowsPerPage InfoFormat="@GlobalSettings.PagerInfoFormat" />
        </PagerContent>
    </MudTable>
</MudContainer>

@code {
    private async Task<TableData<PkdEntry>> ServerReload(TableState state, CancellationToken token)
    {
        var query = PkdService.GetListQuery().OrderBy(x=>x.Division).ThenBy(x=>x.Group).ThenBy(x=>x.Class);

        var total = await query.CountAsync();
        var data = await query
            .Skip(state.Page * state.PageSize)
            .Take(state.PageSize)
            .ToListAsync();

        return new TableData<PkdEntry>() { TotalItems = total, Items = data };
    }
}
