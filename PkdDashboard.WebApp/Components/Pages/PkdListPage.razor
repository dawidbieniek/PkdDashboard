@page "/pkd"
@using Microsoft.EntityFrameworkCore
@using PkdDashboard.WebApp.Components.Layout

@rendermode InteractiveServer
@attribute [Authorize]

@inject PkdService PkdService

<PageTitle>Lista PKD</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="h-100">
    <MudTable @ref="_table" Class="full-height-table" ServerData="ServerReload" Hover>
        <ToolBarContent>
            <MudText Typo="Typo.h6">Lista PKD</MudText>
            <MudSpacer />
            <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="Wyszukaj" Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <ColGroup>
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col style="width: 60px" />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>Sekcja</MudTh>
            <MudTh>Dział</MudTh>
            <MudTh>Grupa</MudTh>
            <MudTh>Klasa</MudTh>
            <MudTh>Symbol</MudTh>
            <MudTh>Opis</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Section">@context.Section</MudTd>
            <MudTd DataLabel="Division">@context.DivisionString</MudTd>
            <MudTd DataLabel="Group">@context.GroupString</MudTd>
            <MudTd DataLabel="Class">@context.ClassString</MudTd>
            <MudTd DataLabel="Symbol">@context.PkdString</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTableCommonPager/>
        </PagerContent>
    </MudTable>
</MudContainer>

@code {
    private MudTable<PkdEntry> _table = default!;
    private string _searchQuery = string.Empty;

    private async Task<TableData<PkdEntry>> ServerReload(TableState state, CancellationToken token)
    {
        var data = await PkdService.GetListQueryAsync(new(state, _searchQuery));
        return data.ToTableData();
    }

    private void OnSearch(string text)
    {
        _searchQuery = text;
        _table.ReloadServerData();
    }
}
